[project]
requires-python = ">=3.12"


[tool.poetry]
name = "faqml"
version = "0.1.0"
description = ""
authors = ["Dan Elkayam <dan.elkayam@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.12"
flet = "0.19.0"
regex = "^2023.12.25"
gql = "^3.5.0"
aiohttp = "^3.9.3"
pytest = "^8.0.0"
flet-fastapi = "^0.19.0"
tqdm = "^4.66.1"
clipman = "^3.1.6"
whoosh = "^2.7.4"
dropbox = "^11.36.2"
markdownify = "^0.11.6"
markdown = "^3.5.2"
mistletoe = "^1.3.0"
setuptools = "^69.1.0"
pyyaml = { version = "!=6.0.0,!=5.4.0,!=5.4.1" }
doublemetaphone = {path = "B:/Downloads/doublemetaphone-1.1-cp312-cp312-win_amd64.whl"}
dedupe = {path = "B:/Downloads/wheels-5/dist/dedupe-2.0.23-cp312-cp312-win_amd64.whl"}
markdown-it-py = "^3.0.0"
linkify-it-py = "^2.0.3"
mdit-py-plugins = "^0.4.0"
bs4 = "^0.0.2"
hypothesis = "^6.98.9"


[build-system]
requires = ["poetry-core>=1.9.0"]
build-backend = "poetry.core.masonry.api"


[tool.ruff]
cache-dir = ".cache/ruff"

line-length = 100

target-version = "py312"

lint.select = [
    "A",  # prevent using keywords that clobber python builtins
    "B",  # bugbear: security warnings
    "E",  # pycodestyle
    "F",  # pyflakes
    "N",  # pep8-naming
    "ANN",  # annotations
    "ASYNC",  # async/await
    "S",  # Bandit
    "FBT",
    "DTZ",
    "ISC",
    "ICN",
    "PIE",
    "PYI",
    "Q",
    "RSE",
    "RET",
    "SLOT",
    "TCH",
    "PTH",
    "LOG",
    "RUF",
    "C4",  # flake8-comprehensions
    "ISC",  # implicit string concatenation
    "UP",  # alert you when better syntax is available in your python version
    "RUF",  # the ruff developer's own rules
    # flake8-simplify
    "SIM",
    # isort
    "I",
]

fix = true
unsafe-fixes = true
lint.extend-fixable = ["B"]
lint.preview = true
lint.ignore = ["ISC001"]
# Enumerate all fixed violations.
show-fixes = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    # Allow Pydantic's `@validator` decorator to trigger class method treatment.
    "pydantic.validator",
]